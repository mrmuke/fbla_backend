[{"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\index.js":"1","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Navbar.js":"2","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Register.js":"3","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\TakeQuiz.js":"4","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Dashboard.js":"5","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Login.js":"6","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Analytics.js":"7","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\QuizList.js":"8","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\QuizCard.js":"9","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\services\\QuizService.js":"10","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\App.js":"11","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Plan.js":"12","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\auth.js":"13","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Home.js":"14","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\reportWebVitals.js":"15","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\reportWebVitals.js":"16","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Plan.js":"17","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\index.js":"18","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Navbar.js":"19","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\QuizCard.js":"20","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Register.js":"21","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\TakeQuiz.js":"22","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\QuizList.js":"23","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\API_URL.js":"24","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Home.js":"25","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Dashboard.js":"26","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\QuizService.js":"27","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Analytics.js":"28","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Login.js":"29","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\UsersService.js":"30","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Feedback.js":"31","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\App.js":"32","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\PrivateRoute.js":"33","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\auth.js":"34"},{"size":586,"mtime":1608997065729,"results":"35","hashOfConfig":"36"},{"size":1404,"mtime":1610406410135,"results":"37","hashOfConfig":"36"},{"size":2631,"mtime":1609017334580,"results":"38","hashOfConfig":"36"},{"size":8029,"mtime":1616447942383,"results":"39","hashOfConfig":"36"},{"size":1172,"mtime":1610158820029,"results":"40","hashOfConfig":"36"},{"size":2505,"mtime":1609017334580,"results":"41","hashOfConfig":"36"},{"size":5126,"mtime":1610808851454,"results":"42","hashOfConfig":"36"},{"size":2978,"mtime":1610667796340,"results":"43","hashOfConfig":"36"},{"size":1318,"mtime":1610561162579,"results":"44","hashOfConfig":"36"},{"size":946,"mtime":1610746318465,"results":"45","hashOfConfig":"36"},{"size":1611,"mtime":1609990762535,"results":"46","hashOfConfig":"36"},{"size":4753,"mtime":1610421340303,"results":"47","hashOfConfig":"36"},{"size":168,"mtime":1608997065725,"results":"48","hashOfConfig":"36"},{"size":3106,"mtime":1610578718785,"results":"49","hashOfConfig":"36"},{"size":375,"mtime":1608997065734,"results":"50","hashOfConfig":"36"},{"size":375,"mtime":1616451537102,"results":"51","hashOfConfig":"52"},{"size":4624,"mtime":1616824754914,"results":"53","hashOfConfig":"52"},{"size":586,"mtime":1616451537030,"results":"54","hashOfConfig":"52"},{"size":1405,"mtime":1616803503475,"results":"55","hashOfConfig":"52"},{"size":1310,"mtime":1616824744842,"results":"56","hashOfConfig":"52"},{"size":2631,"mtime":1616451537085,"results":"57","hashOfConfig":"52"},{"size":7952,"mtime":1616824353587,"results":"58","hashOfConfig":"52"},{"size":3023,"mtime":1616824764418,"results":"59","hashOfConfig":"52"},{"size":141,"mtime":1616739124545,"results":"60","hashOfConfig":"52"},{"size":3127,"mtime":1616529120655,"results":"61","hashOfConfig":"52"},{"size":1253,"mtime":1616802837365,"results":"62","hashOfConfig":"52"},{"size":946,"mtime":1616451537119,"results":"63","hashOfConfig":"52"},{"size":5226,"mtime":1616803063503,"results":"64","hashOfConfig":"52"},{"size":2505,"mtime":1616451537068,"results":"65","hashOfConfig":"52"},{"size":501,"mtime":1616451537126,"results":"66","hashOfConfig":"52"},{"size":1556,"mtime":1616807257043,"results":"67","hashOfConfig":"52"},{"size":1721,"mtime":1616825726025,"results":"68","hashOfConfig":"52"},{"size":497,"mtime":1616451536985,"results":"69","hashOfConfig":"52"},{"size":168,"mtime":1616451536994,"results":"70","hashOfConfig":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"683jfc",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"egfwa9",{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\index.js",[],["152","153"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Navbar.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Register.js",["154"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\TakeQuiz.js",["155","156","157","158","159","160","161"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Dashboard.js",["162","163","164"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Login.js",["165","166"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Analytics.js",["167","168","169"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\QuizList.js",["170","171","172"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\QuizCard.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\services\\QuizService.js",["173"],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\App.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\components\\Plan.js",["174"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport QuizService from '../services/QuizService'\r\nconst quizService = new QuizService()\r\nexport default function Plan() {\r\n    const [plan, setPlan] = useState(false)\r\n    const [testDate, setTestDate] = useState(null)\r\n    const [category, setCategory] = useState(\"Advertising\")\r\n    const [goals, setGoals] = useState(null)\r\n    useEffect(() => {\r\n        getGoals()\r\n    }, [])\r\n    function getGoals() {\r\n        quizService.getPlan().then(result => {\r\n            setGoals(result.data)\r\n        })\r\n    }\r\n    function createPlan() {\r\n        if (testDate) {\r\n            quizService.createPlan({ \"testDate\": testDate, \"category\": category }).then(result => {\r\n                setGoals(result.data)\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Please select your test date...\")\r\n        }\r\n    }\r\n    const datesAreOnSameDay = (first, second) =>\r\n    {\r\n        return first.getFullYear() === second.getFullYear() &&\r\n        first.getMonth() === second.getMonth() &&\r\n        first.getDate() === second.getDate();\r\n    }\r\n    function dateWithinDateRange(date, min, max){\r\n        return date>new Date(min) && date< new Date(max)\r\n    }\r\n    \r\n    return (\r\n        //do analyutics\r\n        //follow guidelines\r\n        //dropdown, true or false, multiple choice, multiple answers, fill in the blank\r\n        //401 error\r\n        //analytics dashboard and take quizzes apge\r\n        //add code to extension\r\n        <div className=\"goal-header\"  >\r\n            {!goals?\r\n            <div style={{color:'white'}}>Loading...</div>\r\n            :\r\n            goals.length > 0 ?\r\n                <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}>\r\n                    <h2 style={{ textDecorationLine: 'underline',marginBottom:'10px' }}>Reach Nationals</h2>\r\n                    {goals.map((goal, index) => (\r\n                        <div key={goal.id}>\r\n                            \r\n                        <div className=\"step\">\r\n                            <h1 className={new Date()>new Date(goal.date)?\"filled-step-header\":\"step-header\"}>{index + 1}</h1>\r\n                            <p className=\"step-text\">{goal.date} : <a href={`/quizzes/${goal.quiz.id}`}><strong>{goal.quiz.name}</strong></a> {datesAreOnSameDay(new Date(),new Date(goal.date))&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        <div className=\"step border-left\">\r\n                            <p className=\"step-text\">{goal.date} to {goals[index+1]?goals[index+1].date:\"Test Date\"} : <strong>Study</strong>{dateWithinDateRange(new Date(),goal.date,goals[index+1]?goals[index+1].date:\"2099-10-12\")&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                    <div className=\"step\">\r\n                            <h1 className=\"step-header\">{goals.length+1}</h1>\r\n                            <p className=\"step-text\">Ready for your <b>Objective Test</b></p>\r\n\r\n                        </div>\r\n                    </div> :\r\n\r\n                !plan ?\r\n                    <>\r\n                        <img className=\"goal-image\" src=\"https://cdn.kastatic.org/images/sat/overview-ctas/schedule.svg\" alt=\"\" aria-hidden=\"true\" />\r\n                        <div style={{ color: 'white', padding: '15px' }}>\r\n                            <h2 style={{ marginBottom: '10px' }}>Set up new goals today!</h2>\r\n    Based on your test date, we'll put together a practice plan to ensure you're ready.<br></br>\r\n                            <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={() => setPlan(true)}>Plan Your Studying</button></div>\r\n                    </> : <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}><strong style={{ margin: '10px' }}>Enter testing date...</strong><input type=\"date\" onChange={e => setTestDate(e.target.value)} /><strong style={{ margin: '10px' }}>Testing Category</strong><select value={category} onChange={e => setCategory(e.target.value)}>\r\n                        <option value=\"Journalism\">Journalism</option>\r\n                        <option value=\"Securities and Investments\">Securities and Investments</option>\r\n                        <option value=\"Advertising\">Advertising</option>\r\n                    </select>\r\n                        <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={createPlan}>Create My Study Plan</button>\r\n\r\n\r\n                    </div>}\r\n\r\n\r\n        </div>)\r\n\r\n}","C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\auth.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\pages\\Home.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\reportWebVitals.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Plan.js",["175"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Feedback from './Feedback'\r\nimport QuizService from '../services/QuizService'\r\nconst quizService = new QuizService()\r\nexport default function Plan() {\r\n    const [plan, setPlan] = useState(false)\r\n    const [testDate, setTestDate] = useState(null)\r\n    const [category, setCategory] = useState(\"Advertising\")\r\n    const [goals, setGoals] = useState(null)\r\n    useEffect(() => {\r\n        getGoals()\r\n    }, [])\r\n    function getGoals() {\r\n        quizService.getPlan().then(result => {\r\n            setGoals(result.data)\r\n        })\r\n    }\r\n    function createPlan() {\r\n        if (testDate) {\r\n            quizService.createPlan({ \"testDate\": testDate, \"category\": category }).then(result => {\r\n                setGoals(result.data)\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Please select your test date...\")\r\n        }\r\n    }\r\n    const datesAreOnSameDay = (first, second) =>\r\n    {\r\n        return first.getFullYear() === second.getFullYear() &&\r\n        first.getMonth() === second.getMonth() &&\r\n        first.getDate() === second.getDate();\r\n    }\r\n    function dateWithinDateRange(date, min, max){\r\n        return date>new Date(min) && date< new Date(max)\r\n    }\r\n    \r\n    return (\r\n\r\n        <div className=\"goal-header\"  >\r\n            {!goals?\r\n            <div style={{color:'white'}}>Loading...</div>\r\n            :\r\n            goals.length > 0 ?\r\n            <div className=\"feedback-container\">\r\n                <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}>\r\n                    <h2 style={{ textDecorationLine: 'underline',marginBottom:'10px',padding:'20px' }}>Reach Nationals</h2>\r\n                    {goals.map((goal, index) => (\r\n                        <div key={goal.id}>\r\n                            \r\n                        <div className=\"step\">\r\n                            <h1 className={new Date()>new Date(goal.date)?\"filled-step-header\":\"step-header\"}>{index + 1}</h1>\r\n                            <p className=\"step-text\">{goal.date} : <a href={`/${goal.quiz.id}`}><strong>{goal.quiz.name}</strong></a> {datesAreOnSameDay(new Date(),new Date(goal.date))&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        <div className=\"step border-left\">\r\n                            <p className=\"step-text\">{goal.date} to {goals[index+1]?goals[index+1].date:\"Test Date\"} : <strong>Study</strong>{dateWithinDateRange(new Date(),goal.date,goals[index+1]?goals[index+1].date:\"2099-10-12\")&&<> &#x2190; You are here</>}</p>\r\n\r\n                        </div>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                    <div className=\"step\">\r\n                            <h1 className=\"step-header\">{goals.length+1}</h1>\r\n                            <p className=\"step-text\">Ready for your <b>Objective Test</b></p>\r\n\r\n                        </div>\r\n                    </div><Feedback/></div> :\r\n\r\n                !plan ?\r\n                    <>\r\n                        <img className=\"goal-image\" src=\"https://cdn.kastatic.org/images/sat/overview-ctas/schedule.svg\" alt=\"\" aria-hidden=\"true\" />\r\n                        <div style={{ color: 'white', padding: '15px' }}>\r\n                            <h2 style={{ marginBottom: '10px' }}>Set up new goals today!</h2>\r\n    Based on your test date, we'll put together a practice plan to ensure you're ready.<br></br>\r\n                            <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={() => setPlan(true)}>Plan Your Studying</button></div>\r\n                    </> : <div style={{ color: 'white', display: 'flex', flexDirection: 'column' }}><strong style={{ margin: '10px' }}>Test Date</strong><input type=\"date\" onChange={e => setTestDate(e.target.value)} /><strong style={{ margin: '10px' }}>Test Category</strong><select style={{padding:'10px'}} value={category} onChange={e => setCategory(e.target.value)}>\r\n                        <option value=\"Journalism\">Journalism</option>\r\n                        <option value=\"Securities and Investments\">Securities and Investments</option>\r\n                        <option value=\"Advertising\">Advertising</option>\r\n                    </select>\r\n                        <button style={{ color: '#1586CA', backgroundColor: 'white', padding: '10px', borderRadius: '10px', marginTop: '10px' }} onClick={createPlan}>Create My Study Plan</button>\r\n\r\n\r\n                    </div>}\r\n\r\n\r\n        </div>)\r\n\r\n}",["176","177"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\index.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Navbar.js",[],["178","179"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\QuizCard.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Register.js",["180"],"import { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth\";\r\nimport '../auth.css'\r\nimport UsersService from '../services/UsersService'\r\n\r\nconst  usersService  =  new  UsersService();\r\nexport default function Register(){\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n     const [password, setPassword] = useState(\"\")\r\n     const [loading, setLoading] = useState(false)\r\n     const { authTokens, setAuthTokens } = useAuth();\r\n\r\n     function registerUser(){\r\n\t\tsetLoading(true)\r\n\t\tusersService.registerUser({\"username\":username,\"email\":email,\"password\":password})\r\n\t\t.then(result => {\r\n\t\t\t\tsetAuthTokens(result.data);\r\n\t\t}).catch(e=>{\r\n\r\n\t\t\t\tsetLoading(false)\r\n\t\t})\r\n\t\r\n\t\r\n\t\r\n}\r\nif(authTokens){\r\n    return <Redirect to=\"/dashboard\"/>\r\n}\r\nreturn <div className=\"limiter\">\r\n<div className=\"container-login100\">\r\n    <div className=\"wrap-login100\">\r\n        <div className=\"login100-form validate-form p-l-55 p-r-55 p-t-178\">\r\n\r\n        <span className=\"login100-form-title\">\r\n            Register\r\n                </span>\r\n\r\n        <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Please enter username\">\r\n            <input className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\" value={username} onChange={e=>setUsername(e.target.value)} />\r\n            <span className=\"focus-input100\"></span>\r\n        </div>\r\n        <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Please enter email\">\r\n            <input className=\"input100\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e=>setEmail(e.target.value)} />\r\n            <span className=\"focus-input100\"></span>\r\n        </div>\r\n\r\n        <div className=\"wrap-input100 validate-input m-b-23\" data-validate=\"Please enter password\">\r\n            <input className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Password\"value={password} onChange={e=>setPassword(e.target.value)} />\r\n            <span className=\"focus-input100\"></span>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"container-login100-form-btn\">\r\n            <button className=\"login100-form-btn\" onClick={registerUser}>\r\n                Sign up\r\n                    </button>\r\n        </div>\r\n\r\n        <div className=\"flex-col-c p-t-170 p-b-40\">\r\n            <span className=\"txt1 p-b-9\">\r\n                Already have an account?\r\n                    </span>\r\n\r\n            <Link to=\"/login\" className=\"txt3\">\r\n                Login in now\r\n                    </Link>\r\n        </div>\r\n\r\n    </div></div></div></div>\r\n}",["181","182"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\TakeQuiz.js",["183","184","185","186","187","188","189"],"\r\nimport { useEffect, useState } from \"react\"\r\nimport QuizService from '../services/QuizService'\r\nimport Modal from 'react-modal';\r\nconst quizService = new QuizService()\r\nexport default function TakeQuiz(props) {\r\n  const [quiz, setQuiz] = useState(null)\r\n  const id = props.match.params.id\r\n  const [answers, setAnswers] = useState([])\r\n  const [index, setIndex] = useState(0)\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\r\n  const [score, setScore] = useState(-1)\r\n  const [messages, setMessages] = useState([])\r\n  const [confirmModal, setConfirmModal] = useState(false)\r\n  useEffect(() => {\r\n    quizService.getQuiz(id)\r\n      .then(result => {\r\n        initQuiz(result)\r\n      })\r\n  }, [])\r\n  function initQuiz(result){\r\n    setQuiz(result.data.quiz)\r\n    if (result.data.quiz.quiztakers_set.completed) {\r\n      setMessages(result.data.quiz.quiztakers_set.usersanswer_set.map(answer => answer.message))\r\n\r\n      setScore(result.data.quiz.quiztakers_set.score)\r\n      //quizService.getAnswers(result.data.quiz.id)\r\n    }\r\n    initAnswers(result.data.quiz)\r\n  }\r\n\r\n  function initAnswers(quiz) {\r\n    const usersAnswers = quiz.quiztakers_set.usersanswer_set;\r\n    let array = []\r\n    var set = false\r\n    for (let i = 0; i < usersAnswers.length; i++) {\r\n      if (usersAnswers[i]['answer'].length > 0) {\r\n        console.log(usersAnswers[i]['answer'])\r\n        array.push(usersAnswers[i]['answer']);\r\n\r\n      }\r\n      else {\r\n        \r\n        if (!set) {\r\n          set = true\r\n          setIndex(i)\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n    console.log(array)\r\n    setAnswers(array)\r\n  }\r\n  function saveAnswer() {\r\n    const body = {\r\n      \"quiztaker\": quiz.quiztakers_set.id,\r\n      \"question\": quiz.question_set[index].id,\r\n      \"answer\": selectedAnswer\r\n    }\r\n    quizService.saveAnswer(body)\r\n  }\r\n\r\n  function submitQuiz() {\r\n    const body = {\r\n      \"quiztaker\": quiz.quiztakers_set.id,\r\n      \"question\": quiz.question_set[index].id,\r\n      \"answer\": selectedAnswer\r\n    }\r\n    quizService.submitQuiz(body, id).then(result => {\r\n      setScore(result.data.quiztakers_set.score)\r\n      setMessages(result.data.quiztakers_set.usersanswer_set.map(answer => answer.message))\r\n    })\r\n  }\r\n  function retakeQuiz(){\r\n    quizService.retakeQuiz(id).then(result=>{\r\n      initQuiz(result)\r\n      setScore(-1)\r\n      setConfirmModal(false)\r\n      setIndex(0)\r\n    })\r\n  }\r\n  function next() {\r\n\r\n    if (index == quiz.question_set.length - 1) {\r\n      setConfirmModal(true)\r\n      return;\r\n    }\r\n    if (selectedAnswer && selectedAnswer.length > 0) {\r\n      saveAnswer()\r\n    }\r\n\r\n\r\n\r\n    if (index !== quiz.question_set.length - 1) {\r\n      setIndex(index + 1)\r\n      setSelectedAnswer(null)\r\n    }\r\n  }\r\n\r\n  function selectAnswer(id) {\r\n    setSelectedAnswer(id)\r\n    var arr = answers\r\n    arr[index] = id\r\n    console.log(arr)\r\n    setAnswers(arr)\r\n\r\n  }\r\n\r\n\r\n  function previous() {\r\n    if (selectedAnswer) {\r\n      saveAnswer()\r\n    }\r\n\r\n    if (index != 0) {\r\n      setIndex(index - 1)\r\n      setSelectedAnswer(null)\r\n    }\r\n  }\r\n  if (!quiz) {\r\n    return null\r\n  }\r\n  if (score != -1) {\r\n    return (<div><div className=\"table-title\">\r\n     \r\n      <div style={{ padding: '15px' }}>\r\n        <Score score={score} /></div>\r\n        <h2>{quiz.name} </h2>\r\n        <button onClick={retakeQuiz} className=\"take-quiz\">Retake</button>\r\n    </div>\r\n      <table className=\"table-fill\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-left\">Question</th>\r\n            <th className=\"text-left\">Answer</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table-hover\">\r\n\r\n          {messages.map((message, index) => (\r\n            <tr>\r\n              <td className=\"text-left\">{quiz.question_set[index] && quiz.question_set[index].label}</td>\r\n              <td className=\"text-left\">{message}</td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n        \r\n      </table>\r\n      </div>)\r\n  }\r\n\r\n  return <div style={{display:'flex',justifyContent:'center',height:'100vh',alignItems:'center',background:'#1586CA'}}>\r\n    <Modal\r\n      isOpen={confirmModal}>\r\n      <div className=\"buttons\" style={{ diplay: 'flex', flexDirection: 'column',justifyContent:'center', marginTop:'10%'}}>\r\n        <h2>Confirm Submission</h2>\r\n        <p>{quiz.question_set.length-answers.filter(e=>e.length>0).length?`You have ${quiz.question_set.length-answers.filter(e=>e.length>0).length} unanswered, are you sure you want to submit?`:\"Check all of your answers\"}</p>\r\n        <button onClick={submitQuiz}>Submit</button><button onClick={() => setConfirmModal(false)}>Cancel</button>\r\n      </div>\r\n    </Modal>\r\n  \r\n  <div style={{maxWidth:'550px',background:'white',borderRadius:'10px',padding:'10px'}}>\r\n    <div className=\"question-wrapper\">\r\n      <div className=\"question-number\">\r\n        QUESTION  {index + 1} OF {quiz.question_set.length}\r\n      </div>\r\n      <Question selectedAnswer={answers[index]} question={quiz['question_set'][index]} selectAnswer={selectAnswer} />\r\n\r\n\r\n    </div>\r\n\r\n    <div className=\"buttons\">\r\n      <button onClick={previous}>\r\n        Previous\r\n        </button>\r\n      <button onClick={next}> {index == quiz.question_set.length - 1 ? 'Submit' : 'Next'}\r\n      </button>\r\n    </div>\r\n  </div></div>\r\n}\r\nfunction Question({ question, selectAnswer, selectedAnswer }) {\r\n  return (\r\n    <div style={{ padding: '15px' }}>\r\n      <h5 >{question.label}</h5>\r\n      <hr />\r\n      {question.question_type === \"multiple\" ? question['answer_set'].map((answer, index) => (\r\n        <Answer key={answer.id} answer={answer} index={index} selectAnswer={selectAnswer} selectedAnswer={selectedAnswer} />\r\n      )) :\r\n        question.question_type === \"dropdown\" ?\r\n          <select value={selectedAnswer} onChange={e => selectAnswer([+e.target.value])}>\r\n            <option value={null} selected disabled hidden>Choose here</option>\r\n            {question['answer_set'].map(c => (\r\n              <option value={c.id} key={c.id}>{c.label}</option>\r\n\r\n            ))}\r\n\r\n          </select> :\r\n\r\n          <div>\r\n            {question['answer_set'].map(c => (\r\n              <Checkbox selectedAnswer={selectedAnswer} selectAnswer={selectAnswer} key={c.id} answer={c} />\r\n\r\n            ))}     </div>}\r\n    </div>\r\n  )\r\n}\r\nfunction Checkbox({ answer, selectAnswer, selectedAnswer }) {\r\n  const [checked, setChecked] = useState(false)\r\n  useEffect(() => {\r\n    if (selectedAnswer && selectedAnswer.includes(answer.id)) {\r\n      setChecked(true)\r\n    }\r\n  }, [selectedAnswer])\r\n  function changeAnswer(e){\r\n    if (!checked) {\r\n      if(!selectedAnswer){\r\n        selectedAnswer=[]\r\n      }\r\n     selectedAnswer.push(+e.target.value); \r\n     selectAnswer(selectedAnswer); \r\n     setChecked(true) \r\n    } else {\r\n       selectedAnswer.splice(selectedAnswer.indexOf(+e.target.value), 1); \r\n       selectAnswer(selectedAnswer); \r\n       setChecked(false)\r\n    } \r\n  }\r\n  return <div><input checked={checked} type=\"checkbox\" onChange={e => changeAnswer(e)} value={answer.id} />{answer.label}</div>\r\n}\r\nfunction Answer({ answer, selectAnswer, selectedAnswer }) {\r\n  return <div className=\"answer\" onClick={() => selectAnswer([answer.id])} >\r\n    <div className={selectedAnswer == answer.id ? \"selected-letter\" : \"\"}>{answer.label}</div>\r\n  </div>\r\n}\r\nfunction Score({ score }) {\r\n  if (score <= 60) {\r\n    return <div><h1 style={{ fontSize: '100px' }}>&#128546;{score}%</h1><h2 style={{ color: 'red', textDecorationLine: 'underline' }}>Uh oh. Better luck next time.</h2></div>\r\n  }\r\n  else if (score <= 80) {\r\n    return <div><h1 style={{ fontSize: '100px' }}>&#128512;{score}%</h1><h2 style={{ color: 'orange', textDecorationLine: 'underline' }}>\r\n      You can do it! Keep trying!</h2></div>\r\n  }\r\n  else {\r\n    return <div><h1 style={{ fontSize: '100px' }}>&#x1F61C;{score}%</h1><h2 style={{ color: 'green', textDecorationLine: 'underline' }}>\r\n      Congrats! You did it!</h2></div>\r\n  }\r\n\r\n}","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\QuizList.js",["190","191","192"],"import axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport QuizService from '../services/QuizService'\r\nconst quizService = new QuizService();\r\nexport default function QuizList(){\r\n    const [quizzes, setQuizzess]=useState([])\r\n    const [quizFile, setQuizFile] = useState(null)\r\n    const [query, setQuery] = useState(\"\")\r\n    const [importQuiz,setImportQuiz] = useState(false)\r\n    const hiddenFileInput = useRef(null);\r\n    const handleUploadClick = event => {\r\n        hiddenFileInput.current.click();\r\n      };\r\n    useEffect(async()=>{\r\n        const {data} = await quizService.getQuizzes()\r\n        setQuizzess(data)\r\n            \r\n    },[])\r\n    function selectQuizFile(e){\r\n        setQuizFile(e.target.files[0])\r\n    }\r\n    function uploadQuiz(){\r\n        console.log(quizFile)\r\n        const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"myFile\", \r\n        quizFile, \r\n        quizFile.name\r\n      ); \r\nquizService.uploadQuiz(formData).then(result=>{\r\n    setImportQuiz(false)\r\n    setQuizzess(oldArray => [...oldArray, result.data])\r\n})\r\n    }\r\n\r\n    return <div style={{display:'flex',justifyContent:'center',alignItems:'center', background:'#1586CA',minHeight:'100vh',padding:'20px'}}><div className=\"quizzes-container\">\r\n        {importQuiz?\r\n        <div   className=\"create-quiz\" style={{justifyContent:'space-between'}}>\r\n            <div>\r\n            <a className=\"upload-btn\" onClick={handleUploadClick}>Select Quiz</a>\r\n        <input ref={hiddenFileInput} style={{display:'none'}} accept=\"application/pdf\" type=\"file\" onChange={selectQuizFile} /> </div>\r\n        <button onClick={uploadQuiz}> \r\n            Submit! \r\n        </button></div>\r\n    :<>\r\n         <div className=\"create-quiz\"><button onClick={()=>setImportQuiz(true)}>Import Sample</button></div></>}\r\n         <div style={{textAlign:'center'}}>or</div>\r\n   \r\n   {/*  <input accept=\"application/pdf\" type=\"file\" onChange={selectQuizFile} /> \r\n    <button onClick={uploadQuiz}> \r\n        Upload! \r\n    </button>  */}\r\n    <input style={{padding:'10px',width:'100%',margin:'5px',border:'2px solid #eee'}} onChange={e=>setQuery(e.target.value)} placeholder=\"Search for a quiz..\"/>\r\n\r\n    \r\n    {quizzes.length>0?quizzes.filter(q=>q.name.toLowerCase().includes(query.toLowerCase())).map(quiz=>\r\n        <Quiz quiz={quiz} key={quiz.id}/>\r\n    ):<div style={{textAlign:'center'}}>No quizzes left.. Check your dashboard to resume quizzes..</div>}\r\n</div></div>\r\n}\r\nfunction Quiz({quiz}){\r\n    return(\r\n    <Link  to={`/${quiz.id}`}>\r\n        <div className=\"quiz-item\">\r\n        <div>\r\n            <h2>{quiz.name}</h2>\r\n            <p>{quiz.description}</p>\r\n            <div style={{display:'flex'}}>\r\n\r\n        <span>{quiz.questions_count} Questions</span>\r\n\r\n\r\n            </div></div>\r\n                <button className=\"take-quiz\"> Take Quiz</button>\r\n\r\n            </div>\r\n            \r\n\r\n    </Link>);\r\n}",["193","194"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\API_URL.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Home.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Dashboard.js",["195","196","197","198"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\QuizService.js",["199"],"import axios from 'axios';\r\n\r\nimport {API_URL} from './API_URL.js'\r\n\r\n\r\nexport default class QuizService{\r\n    \r\n    constructor(){}\r\n\r\n    getQuizzes() {\r\n        return axios.get(`${API_URL}/api/quiz/quizzes`);\r\n      }\r\n      getQuiz(id) {\r\n        return axios.get(`${API_URL}/api/quiz/${id}`);\r\n      }\r\n    saveAnswer(response){\r\n        return axios.patch(`${API_URL}/api/quiz/saveAnswer`,response)\r\n    }\r\n    getMyQuizzes(){\r\n      return axios.get(`${API_URL}/api/quiz/myQuizzes`)\r\n    }\r\n    retakeQuiz(id){\r\n      return axios.post(`${API_URL}/api/quiz/retake/${id}`)\r\n    }\r\n    \r\n  submitQuiz(body, id) {\r\n    return axios.post(`${API_URL}/api/quiz/${id}/submit`, body)\r\n  }\r\n  uploadQuiz(data) {\r\n    return axios.post(`${API_URL}/api/quiz/upload`, data)\r\n  }\r\n  createPlan(data){\r\n    return axios.post(`${API_URL}/api/quiz/createPlan`,data)\r\n  }\r\n  getPlan(){\r\n    return axios.get(`${API_URL}/api/quiz/plan`)\r\n  }\r\n\r\n\r\n\r\n    \r\n}","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Analytics.js",["200","201","202"],"import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Progress,\r\n  Button\r\n} from 'reactstrap';\r\nimport { Doughnut, Line } from 'react-chartjs-2';\r\nimport QuizService from '../services/QuizService';\r\nconst quizService = new QuizService()\r\nexport default class AnalyticsPage extends Component {\r\n\r\n//SMART FEEDBACK AND IMAGES AND UI - take quiz and all quizzes page\r\n  render() {\r\n    const chartColors = {\r\n      red: 'rgb(233, 30, 99)',\r\n      danger: 'rgb(233, 30, 99)',\r\n      dangerTransparent: 'rgba(233, 30, 99, .8)',\r\n      orange: 'rgb(255, 159, 64)',\r\n      yellow: 'rgb(255, 180, 0)',\r\n      green: 'rgb(34, 182, 110)',\r\n      blue: 'rgb(68, 159, 238)',\r\n      primary: 'rgb(68, 159, 238)',\r\n      primaryTransparent: 'rgba(68, 159, 238, .8)',\r\n      purple: 'rgb(153, 102, 255)',\r\n      grey: 'rgb(201, 203, 207)',\r\n\r\n      primaryShade1: 'rgb(68, 159, 238)',\r\n      primaryShade2: 'rgb(23, 139, 234)',\r\n      primaryShade3: 'rgb(14, 117, 202)',\r\n      primaryShade4: 'rgb(9, 85, 148)',\r\n      primaryShade5: 'rgb(12, 70, 117)'\r\n    };\r\n    //retake feature and analytics\r\n    const donutData = {\r\n      labels: ['Advertising', 'Securities and Investments', 'Journalism'],\r\n      datasets: [\r\n        {\r\n          data: [50, 20, 30],\r\n          backgroundColor: [\r\n            chartColors.primaryShade1,\r\n            chartColors.primaryShade2,\r\n            chartColors.primaryShade3\r\n          ],\r\n          hoverBackgroundColor: [\r\n            chartColors.primaryShade4,\r\n            chartColors.primaryShade4,\r\n            chartColors.primaryShade4\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n   /*  function getPercentages(){\r\n      quizService.getPie().then(result=>{\r\n        set\r\n      })\r\n    } */\r\n    const line = {\r\n      data: {\r\n        labels: ['Journalism 1', 'Journalism 2', 'Journalism Sample', 'Advertising 1','Advertising 2','Advertising Sample','Journalism 1'],\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: [10, 7, 12, 10, 11, 18,20],\r\n            borderColor: 'transparent',\r\n            backgroundColor: chartColors.primary,\r\n            pointBackgroundColor: 'rgba(0,0,0,0)',\r\n            pointBorderColor: 'rgba(0,0,0,0)',\r\n            borderWidth: 4\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    return (\r\n      <div style={{marginTop:'10px'}}>\r\n\r\n        \r\n        \r\n        <Row>\r\n          <Col md={8} sm={12}>\r\n            <Card>\r\n              <CardHeader>Answers Correct</CardHeader>\r\n              <CardBody>\r\n                <div>\r\n                  <Line\r\n                    data={line.data}\r\n                    width={2068}\r\n                    height={846}\r\n                    legend={{ display: false }}\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4} sm={12}>\r\n            <Card  style={{height:'100%'}}>\r\n              <CardHeader>Mastery in Different Topics</CardHeader>\r\n              <CardBody>\r\n                <Doughnut\r\n                  data={donutData}\r\n                  width={908}\r\n                  height={768}\r\n                  legend={{ display: false }}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row>\r\n          <Col md={8} sm={12}>\r\n            <Card>\r\n              <CardHeader>Conversions</CardHeader>\r\n              <CardBody>\r\n                <Row className=\"m-b-md\">\r\n                  <Col xs={4}>\r\n                    <h5>Added to Cart</h5>\r\n                    <div className=\"h2\">4.30%</div>\r\n                    <small className=\"text-muted\">23 Visitors</small>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                    <h5>Reached Checkout</h5>\r\n                    <div className=\"h2\">2.93</div>\r\n                    <small className=\"text-muted\">12 Visitors</small>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                    <h5>Purchased</h5>\r\n                    <div className=\"h2\">10</div>\r\n                    <small className=\"text-muted\">10 Customers</small>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4} xs={12}>\r\n            <Card>\r\n              <CardHeader>Integrations</CardHeader>\r\n              <CardBody>\r\n                <Switch\r\n                  enabled={this.state.facebook}\r\n                  toggle={() => {\r\n                    this.setState(prevState => ({ facebook: !prevState.facebook }));\r\n                  }}\r\n                />\r\n                <span style={{marginLeft:'10px'}}>\r\n                  Facebook\r\n                </span>\r\n                <hr />\r\n                <Switch\r\n                  enabled={this.state.twitter}\r\n                  toggle={() => {\r\n                    this.setState(prevState => ({ twitter: !prevState.twitter }));\r\n                  }}\r\n                />\r\n                <span style={{marginLeft:'10px'}}>\r\n                   Twitter\r\n                </span>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row> */}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\pages\\Login.js",["203","204"],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\services\\UsersService.js",["205"],"import axios from 'axios';\r\n\r\nimport {API_URL} from './API_URL.js'\r\n\r\n\r\nexport default class UsersService{\r\n    \r\n    constructor(){}\r\n\r\n    loginUser(User){\r\n        const url = `${API_URL}/api/users/login`;\r\n        return axios.post(url, User);\r\n    }\r\n    registerUser(User){\r\n        const url = `${API_URL}/api/users/register`;\r\n        return axios.post(url, User);\r\n    }\r\n    logOutUser(){\r\n        const url = `${API_URL}/api/users/logout`;\r\n        return axios.post(url);\r\n    }\r\n\r\n    \r\n}","C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\components\\Feedback.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\App.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\PrivateRoute.js",[],"C:\\Users\\mxing\\Coding_Projects\\fbla_backend\\src\\auth.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":12,"column":13,"nodeType":"212","messageId":"213","endLine":12,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":20,"column":6,"nodeType":"216","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":86,"column":15,"nodeType":"220","messageId":"221","endLine":86,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":117,"column":15,"nodeType":"220","messageId":"221","endLine":117,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":125,"column":13,"nodeType":"220","messageId":"221","endLine":125,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":179,"column":38,"nodeType":"220","messageId":"221","endLine":179,"endColumn":40},{"ruleId":"214","severity":1,"message":"223","line":218,"column":6,"nodeType":"216","endLine":218,"endColumn":22,"suggestions":"224"},{"ruleId":"218","severity":1,"message":"219","line":237,"column":36,"nodeType":"220","messageId":"221","endLine":237,"endColumn":38},{"ruleId":"210","severity":1,"message":"225","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"226","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":24},{"ruleId":"210","severity":1,"message":"227","line":2,"column":26,"nodeType":"212","messageId":"213","endLine":2,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":11,"column":9,"nodeType":"212","messageId":"213","endLine":11,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":54,"column":13,"nodeType":"230","endLine":54,"endColumn":42},{"ruleId":"210","severity":1,"message":"231","line":8,"column":3,"nodeType":"212","messageId":"213","endLine":8,"endColumn":11},{"ruleId":"210","severity":1,"message":"232","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":9},{"ruleId":"210","severity":1,"message":"233","line":13,"column":7,"nodeType":"212","messageId":"213","endLine":13,"endColumn":18},{"ruleId":"210","severity":1,"message":"234","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"235","line":15,"column":15,"nodeType":"236","endLine":19,"endColumn":6},{"ruleId":"228","severity":1,"message":"237","line":43,"column":13,"nodeType":"230","endLine":43,"endColumn":67},{"ruleId":"238","severity":1,"message":"239","line":8,"column":5,"nodeType":"240","messageId":"241","endLine":8,"endColumn":20},{"ruleId":"210","severity":1,"message":"234","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"234","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"206","replacedBy":"242"},{"ruleId":"208","replacedBy":"243"},{"ruleId":"206","replacedBy":"244"},{"ruleId":"208","replacedBy":"245"},{"ruleId":"210","severity":1,"message":"211","line":12,"column":13,"nodeType":"212","messageId":"213","endLine":12,"endColumn":20},{"ruleId":"206","replacedBy":"246"},{"ruleId":"208","replacedBy":"247"},{"ruleId":"214","severity":1,"message":"215","line":20,"column":6,"nodeType":"216","endLine":20,"endColumn":8,"suggestions":"248"},{"ruleId":"218","severity":1,"message":"219","line":86,"column":15,"nodeType":"220","messageId":"221","endLine":86,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":117,"column":15,"nodeType":"220","messageId":"221","endLine":117,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":125,"column":13,"nodeType":"220","messageId":"221","endLine":125,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":179,"column":38,"nodeType":"220","messageId":"221","endLine":179,"endColumn":40},{"ruleId":"214","severity":1,"message":"223","line":216,"column":6,"nodeType":"216","endLine":216,"endColumn":22,"suggestions":"249"},{"ruleId":"218","severity":1,"message":"219","line":235,"column":36,"nodeType":"220","messageId":"221","endLine":235,"endColumn":38},{"ruleId":"210","severity":1,"message":"234","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"235","line":15,"column":15,"nodeType":"236","endLine":19,"endColumn":6},{"ruleId":"228","severity":1,"message":"237","line":43,"column":13,"nodeType":"230","endLine":43,"endColumn":67},{"ruleId":"206","replacedBy":"250"},{"ruleId":"208","replacedBy":"251"},{"ruleId":"210","severity":1,"message":"225","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"226","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":24},{"ruleId":"210","severity":1,"message":"227","line":2,"column":26,"nodeType":"212","messageId":"213","endLine":2,"endColumn":36},{"ruleId":"210","severity":1,"message":"252","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":8,"column":5,"nodeType":"240","messageId":"241","endLine":8,"endColumn":20},{"ruleId":"210","severity":1,"message":"231","line":8,"column":3,"nodeType":"212","messageId":"213","endLine":8,"endColumn":11},{"ruleId":"210","severity":1,"message":"232","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":9},{"ruleId":"210","severity":1,"message":"233","line":13,"column":7,"nodeType":"212","messageId":"213","endLine":13,"endColumn":18},{"ruleId":"210","severity":1,"message":"211","line":11,"column":9,"nodeType":"212","messageId":"213","endLine":11,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":54,"column":13,"nodeType":"230","endLine":54,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":8,"column":5,"nodeType":"240","messageId":"241","endLine":8,"endColumn":20},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'initQuiz'. Either include them or remove the dependency array.","ArrayExpression",["255"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'answer.id'. Either include it or remove the dependency array.",["256"],"'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Progress' is defined but never used.","'Button' is defined but never used.","'quizService' is assigned a value but never used.","'axios' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["253"],["254"],["253"],["254"],["253"],["254"],["257"],["258"],["253"],["254"],"'Feedback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"259","fix":"263"},{"desc":"261","fix":"264"},"Update the dependencies array to be: [id, initQuiz]",{"range":"265","text":"266"},"Update the dependencies array to be: [answer.id, selectedAnswer]",{"range":"267","text":"268"},{"range":"269","text":"266"},{"range":"270","text":"268"},[706,708],"[id, initQuiz]",[6597,6613],"[answer.id, selectedAnswer]",[706,708],[6520,6536]]